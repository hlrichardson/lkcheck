#!/bin/bash
TESTFAM="ipv6"
source $(dirname $0)/../utils

#                 ................................................. 
echo -n "$TESTID: ipv6 over sit/veth ipv6 tunnel..................."

##############################################################################
# Setup
ip netns add ns0
ip netns add ns1

# Create and configure veth pair
ip link add p0 type veth peer name p1

ip link set p0 netns ns0
ip netns exec ns0 ip addr add "4.1.1.1/24" dev p0
ip netns exec ns0 ip link set dev p0 up

ip link set p1 netns ns1
ip netns exec ns1 ip addr add "4.1.1.2/24" dev p1
ip netns exec ns1 ip link set dev p1 up

# Create and configure tunnel endpoints
ip netns exec ns0 ip tunnel add sit1 mode sit remote 4.1.1.2
ip netns exec ns0 ip addr add "fc00::1/96" dev sit1
ip netns exec ns0 ip link set dev sit1 up

ip netns exec ns1 ip tunnel add sit1 mode sit remote 4.1.1.1
ip netns exec ns1 ip addr add "fc00::2/96" dev sit1
ip netns exec ns1 ip link set dev sit1 up

# Create tunnel routes
#ip netns exec ns0 ip route add "fc00::0/96" dev sit1
#ip netns exec ns1 ip route add "fc00::0/24" dev sit1

##############################################################################
# Execution
sleep 3
RESULT=$(ip netns exec ns0 ping6 -q -c 3 -i 0.3 -w 2 fc00::2 | grep "transmitted" | sed 's/, time.*ms$//')
EXPECT="3 packets transmitted, 3 received, 0% packet loss"

##############################################################################
# Cleanup
ip netns del ns0
ip netns del ns1

##############################################################################
# Result
if [ "$RESULT" = "$EXPECT" ]; then
    echo " [PASS]"
else
    echo " [FAIL]"
fi
