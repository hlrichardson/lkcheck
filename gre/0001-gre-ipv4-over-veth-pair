#!/bin/bash
TESTNUM=$(basename $0 | sed 's/-.*$//')
TESTID=$(printf "%5s-%04d" $TESTFAM $TESTNUM)

#                 ................................................. 
echo -n "$TESTID: ipv4 over gre tunnel over veth pair.............."
PASSED=true
##############################################################################
# Setup
ip netns add ns0
ip netns add ns1

# Create and configure veth pair
ip link add p0 type veth peer name p1

ip link set p0 netns ns0
ip netns exec ns0 ip addr add "1.1.1.1/24" dev p0
ip netns exec ns0 ip link set dev p0 up

ip link set p1 netns ns1
ip netns exec ns1 ip addr add "1.1.1.2/24" dev p1
ip netns exec ns1 ip link set dev p1 up

# Create and configure tunnel endpoints
ip netns exec ns0 ip tunnel add gre1 mode gre remote 1.1.1.2 local 1.1.1.1 ttl 64
ip netns exec ns0 ip addr add "4.1.1.1/24" dev gre1
ip netns exec ns0 ip link set dev gre1 up mtu 1450

ip netns exec ns1 ip tunnel add gre1 mode gre remote 1.1.1.1 local 1.1.1.2 ttl 64
ip netns exec ns1 ip addr add "4.1.2.2/24" dev gre1
ip netns exec ns1 ip link set dev gre1 up mtu 1450

# Create tunnel routes
ip netns exec ns0 ip route add "4.1.2.0/24" dev gre1
ip netns exec ns1 ip route add "4.1.1.0/24" dev gre1

##############################################################################
# Execution
chk_ping_ipv4 ns0 4.1.2.2         || PASSED=false
chk_iperf_tcpv4 ns0 ns1 4.1.2.2   || PASSED=false

##############################################################################
# Cleanup
ip netns del ns0
ip netns del ns1

##############################################################################
# Result
if $PASSED ; then
    echo " [PASS]"
else
    echo " [FAIL]"
fi
