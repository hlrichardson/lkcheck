#!/bin/bash
TESTID=$(printf "%5s-%04d" $TESTFAM $TESTNUM)
VNI=$1
VNISTR="$(printf "%-8s" $VNI | tr ' ' '.')"

#                 ................................................. 
echo -n "$TESTID: ipv6 over geneve/veth ipv6 tunnel VNI $VNISTR..."
PASSED=true
##############################################################################
# Setup
ip netns add ns0
ip netns add ns1

# Create and configure veth pair
ip link add p0 type veth peer name p1

ip link set p0 netns ns0
ip netns exec ns0 ip addr add "fc00::1/96" dev p0
ip netns exec ns0 ip link set dev p0 up

ip link set p1 netns ns1
ip netns exec ns1 ip addr add "fc00::2/96" dev p1
ip netns exec ns1 ip link set dev p1 up

# Create and configure tunnel endpoints
ip netns exec ns0 ip link add gnv0 type geneve dstport 4789 id $VNI remote fc00::2
ip netns exec ns0 ip addr add "fc01::1/96" dev gnv0
ip netns exec ns0 ip link set dev gnv0 up mtu 1400

ip netns exec ns1 ip link add gnv1 type geneve dstport 4789 id $VNI remote fc00::1
ip netns exec ns1 ip addr add "fc02::1/96" dev gnv1
ip netns exec ns1 ip link set dev gnv1 up mtu 1400

# Create tunnel routes
ip netns exec ns0 ip route add "fc02::0/96" dev gnv0
ip netns exec ns1 ip route add "fc01::0/96" dev gnv1

##############################################################################
# Execution
chk_ping_ipv6 ns0 fc02::1         || PASSED=false
chk_iperf_tcpv4 ns0 ns1 fc02::1   || PASSED=false

##############################################################################
# Cleanup
ip netns del ns0
ip netns del ns1

##############################################################################
# Result
if $PASSED ; then
    echo " [PASS]"
else
    echo " [FAIL]"
fi
